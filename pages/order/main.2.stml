<template>
  <view class="main">
    <view class="header-part">
        <status-bar-view></status-bar-view>
        <view class="header-nav">
            <view class="header-left" onclick="fnOpenCitySelectorFrame();">
				<text class="header-left-shop" id="shop">湘中人家(北区店)</text>
                <image class={this.data.citySelectorOpened?'header-left-arrow header-left-arrow-active':'header-left-arrow'} src="../../icon/icon_arrow_down1@3x.png"></image>
				<!-- <text class="header-left-city" id="city" >{this.data.cityName}</text> -->
            </view>
            <text class="header-title"></text>
            <view class="header-right search" onclick="fnSearch()">
                <image src="../../icon/icon_search@3x.png" class="header-right-icon"></image>
            </view>
            <view class="header-right build" onclick="fnNewOrder()">
                <image src="../../icon/icon_build@3x.png" class="header-right-icon"></image>
            </view>
            <view class="header-right advice" onclick="fnMessage()">
                <image src="../../icon/icon_advice2@3x.png" class="header-right-icon"></image>
            </view>
            <text class="advice-bags">8</text>
        </view>
    </view>


    <scroll-view class="nav" scroll-x='true' show-scrollbar="false">
        <text class={'nav-menu'+(this.data.currentIndex==index?' nav-menu-selected':'')} v-for="(item,index) in wareTypeList" data-index={index} onclick={this.fnSetNavMenuIndex}>{item.label}(8)</text>
    </scroll-view>
    <scroll-view scroll-y='true' class="warelist" enable-back-to-top refresher-enabled refresher-triggered={this.data.refresherTriggered} onrefresherrefresh={this.onrefresherrefresh} onscrolltolower={this.onscrolltolower}>
        <view class="header">
            <image class="banner" src={this.data.bannerUrl} placeholder="../../image/default_rect.png" thumbnail="false" mode="widthFix">
        </view>
        <view>
            <view class="cell" v-for="(item, index) in dataList">
                <view data-id={item.id} data-wareCount={item.wareCount} class="container" onclick={this.fnOpenDetailWin}>
                    <view class="container-header">
                        <text class="no">8</text>
                        <view class="receiver">
                            <view class="receiver-user">
                                <view class="receiver-user-name">
                                    <text>张(女士)</text>
                                    <text class="">call</text>
                                </view>
                                <view class="receiver-user-call">
                                    <view class="receiver-address">南华大学 (求是园5栋604) · 1.0公里</view>
                                    <image class="receiver-user-call-icon" src="../../icon/icon_phone.png"/>
                                </view>
                            </view>
                        </view>
                    </view>
                    <view class="list">
                        <text class="list-left">0元饮品一盒【限1份】</text>
                        <text class="list-right">x1</text>
                    </view>
                    <view class="list">
                        <text class="list-left">0元饮品一盒【限1份】</text>
                        <text class="list-right">x1</text>
                    </view>
                    <view class="list">
                        <text class="list-left">0元饮品一盒【限1份】</text>
                        <text class="list-right">x1</text>
                    </view>
                    <view class="list">
                        <text class="list-left">0元饮品一盒【限1份】</text>
                        <text class="list-right">x1</text>
                    </view>
                    <!-- <image class="thumbnail" src={item.thumbnail} placeholder="../../image/default_square.png"></image>
                    <view class="info">
                        <text class="info-name">{item.name + ' ' + (item.unit||'')}</text>
                        <text class="info-description">{item.description}</text>
                        <text class="info-price">{'￥'+item.price}</text>
                        <text class="info-origin-price">{'￥'+item.originPrice}</text>
                    </view>
                    <view class="control">
                        <image class={item.wareCount>0?'minus':'none'} data-index={index} src="../../image/minus.png" onclick={this.fnMinus}>
                        <text class={item.wareCount>0?'count':'none'}>{item.wareCount}</text>
                        <image class="add" data-index={index} src="../../image/add.png" onclick={this.fnAdd}>
                    </view> -->
                </view>
            </view>
        </view>
        <view class="footer">
            <text class="loadDesc">{this.data.haveMoreData?'加载中...':'没有啦！'}</text>
        </view>
    </scroll-view>
    <view class="minicart">
        <minicart></minicart>
    </view>
    <view class="cityselect" v-if="citySelectorOpened">
        <cityselector onresult="oncityselector"></cityselector>
    </view>
  </view>
</template>
<script>
import $kn from "../../script/kn.js";
import '../../components/minicart_frame.stml';
import '../../components/status-bar-view.stml';
import '../cityselector/cityselector.stml';
export default{
    name:'main',
    data() {
        return {
            citySelectorOpened: false,
            cityName:'北京',
            cityDataList: [],
            wareTypeList:[
                {name: 'confirm', label: '新订单', size: null},
                {name: 'delivery', label: '待抢单', size: null},
                {name: 'delivering', label: '配送中', size: null},
                {name: 'expect', label: '配送异常', size: null},
                {name: 'cancel', label: '取消/退款', size: null},
                {name: 'remainder', label: '催单', size: null},
            ],
            currentIndex:0,
            frames:[],
            dataList: [],
            bannerUrl: '',
            skip: 0,
            haveMoreData: true,
            refresherTriggered: false,
            wareTypeId: ''
        }
    },
    methods:{
        fnSearch(){this.toast('search')},
        fnNewOrder(){this.toast('add')},
        fnMessage(){this.toast('message')},
        apiready(){
            if (api.setStatusBarStyle) {
                api.setStatusBarStyle({
                    style: 'light'
                });
            }
            this.initEventListenner();

            // 从缓存中获取上一次选择的城市信息
            var currentCity = $kn.getCurrentCityInfo();
            if (!currentCity) {
                this.fnOpenCitySelectorFrame();
                return;
            }
            
            // 更新界面上显示的城市名称
            this.data.cityName = currentCity.name;

            // 从服务器端更新商品分类列表
            // this.fnGetWareTypeList();
            this.updatedWareList()
        },
        updatedWareList(){
            if (this.data.wareTypeList.length > 0) {
                var wareType = this.data.wareTypeList[this.data.currentIndex];
                this.data.bannerUrl = wareType.banner;
                this.data.wareTypeId = wareType.name=='全部'?'':wareType.id;
                this.data.refresherTriggered = true;
                this.fnGetWareList(false);
            }
        },
        // 从服务器端更新商品分类列表
        fnGetWareTypeList() {
            var that = this;
            $kn.ajax({
                url: 'wareTypes/getWareTypeList',
                cache: true
            }, function(ret, err) {
                if (ret && ret.data) {
                    that.data.wareTypeList = ret.data;
                    that.updatedWareList();
                } else {
                    api.toast({
                        msg: '获取商品分类失败',
                        duration: 2000,
                        location: 'bottom'
                    });
                }
            });
        },

        updateShoppingCart(param){
            var that = this;
            var wareId = param.wareId;
            var wareCount = param.wareCount;
            var body = {
                wareId: wareId,
                wareCount: wareCount
            };
            if (param.hasOwnProperty('selected')) {
                body.selected = param.selected;
            }
            $kn.ajax({
                url: 'carts/mod',
                method: 'post',
                data: {
                    body: body
                }
            }, function(ret, err) {
                if (ret && ret.data) {
                    api.setGlobalData({key:'cartInfo' ,value:ret.data});
                    api.sendEvent({
                        name: 'onGetCartInfo',
                        extra: ret.data
                    });
                    if (that.data.dataList && that.data.dataList.length > 0) {
                        that.getFixedWareList(that.data.dataList, ret.data.wareList);
                    }
                }
            });
        },

        // 初始化事件监听
         initEventListenner() {
            var that = this;
            
            // 监听updateShoppingCart事件（自定义），更新购物车信息
            api.addEventListener({
                name: 'updateShoppingCart'
            }, function(ret, err) {
                that.updateShoppingCart(ret.value);
            });

            // 拦截Android的返回键，在首页点击返回键，提示退出应用
            api.addEventListener({
                name: 'keyback'
            }, function(ret, err) {
                api.confirm({
                    title: '提示',
                    msg: '是否退出应用',
                    buttons: ['确定', '取消']
                }, function(ret, err) {
                    if (ret.buttonIndex == 1) {
                        api.closeWidget({
                            silent: true
                        });
                    }
                });
            });
        },

        oncityselector(e){
            var currentCity = e.detail;
            if (currentCity && currentCity.name) {
                if (this.data.cityName != currentCity.name) {
                    this.data.cityName = currentCity.name;

                    if (this.data.wareTypeList.length > 0) {
                        this.updatedWareList();
                    } else {
                        this.fnGetWareTypeList();
                    }
                }
            }
            this.data.citySelectorOpened = false;
        },

        fnOpenCitySelectorFrame() {
            this.data.citySelectorOpened = !this.data.citySelectorOpened;
        },

        fnSetNavMenuIndex(e) {
            var index = e.currentTarget.dataset.index;
            if (this.data.currentIndex != index) {
                this.data.currentIndex = index;
                this.updatedWareList();
            }
        },

        fnOpenPersonalCenterWin() {
            var userInfo = $kn.getUserInfo();
            if (userInfo && userInfo.id) {
                api.openWin({
                    name: 'personalcenter',
                    url: '../personalcenter/personalcenter.stml'
                });
            } else {
                // 没有登录，打开登录Window
                api.openWin({
                    name: 'login',
                    url: '../login/login.stml'
                });
            }
        },
        onrefresherrefresh(){
            this.data.refresherTriggered = true;
            this.fnGetWareList(false);
        },
        // 获取商品列表，通过loadMore_参数区分是首次加载还是加载更多
        fnGetWareList(loadMore_) {
            // 如果是加载更多，需要实现分页
            var limit = 20;
            if (loadMore_) {
                this.data.skip += limit;
            } else {
                this.data.skip = 0;
            }

            var currentCity = $kn.getCurrentCityInfo();
            var that = this;
            // 根据城市和商品分类获得相应的商品列表
            $kn.ajax({
                url: 'wares/getWareList',
                method: 'post',
                data: {
                    body: {
                        supportAreaId: currentCity?currentCity.id:'',
                        wareTypeId: this.data.wareTypeId,
                        skip: this.data.skip,
                        limit: limit
                    }
                }
            }, function(ret, err) {
                if (ret && ret.data) {
                    var cartData = api.getGlobalData({key: 'cartInfo'});
                    var data = ret.data;
                    that.data.haveMoreData = data.length == limit;
                    that.getFixedWareList(data, cartData?cartData.wareList:null);
                    if (loadMore_) {
                        that.data.dataList = that.data.dataList.concat(data);
                    } else {
                        that.data.dataList = data;
                    }
                } else {
                    api.toast({
                        msg: '加载数据失败',
                        duration: 2000,
                        location: 'bottom'
                    });
                }
                that.data.refreshState = 'normal';
                that.data.refresherTriggered = false;
            });
        },
        getFixedWareList(wareList, cartWareList) {
            for (var i=0;i<wareList.length;i++) {
                var item = wareList[i];
                item.wareCount = 0;
                if (cartWareList && cartWareList.length > 0) {
                    for (var j=0;j<cartWareList.length;j++) {
                        var cartItem = cartWareList[j];
                        if (cartItem.id == item.id) {
                            item.wareCount = cartItem.wareCount;
                        }
                    }
                }
            }
        },
        onscrolltolower() {
            if (this.data.haveMoreData) {
                this.fnGetWareList(true);
            }
        },
        fnOpenDetailWin(e) {
            var id = e.currentTarget.dataset.id;
            var wareCount = e.currentTarget.dataset.wareCount;
            
            api.openWin({
                name: 'ware'+id,
                url: '../ware/ware.stml',
                pageParam: {
                    wareId: id,
                    wareCount: wareCount
                },
                animation: {
                    type: "fade"
                }
            });
        },
        fnMinus(e) {
            e.stopPropagation && e.stopPropagation();
            if (!$kn.getUserInfo()) {
                api.openWin({
                    name: 'login',
                    url: '../login/login.stml'
                });
                return;
            }
            var index = e.currentTarget.dataset.index;
            var item = this.data.dataList[index];
            if (item.wareCount > 0) {
                item.wareCount--;
                
                this.updateShoppingCart({
                    wareId: item.id,
                    wareCount: item.wareCount
                });
            }
        },
        fnAdd(e) {
            e.stopPropagation && e.stopPropagation();
            if (!$kn.getUserInfo()) {
                api.openWin({
                    name: 'login',
                    url: '../login/login.stml'
                });
                return;
            }
            var index = e.currentTarget.dataset.index;
            var item = this.data.dataList[index];
            item.wareCount++;
                
            this.updateShoppingCart({
                wareId: item.id,
                wareCount: item.wareCount
            });
        },
        
        toast(msg) {
            api.toast({
                msg: msg,
                location: 'middle',
                global: true
            });
        }
    }
}
</script>
<style>
    .main {
        height: 100%;
    }

    .header-part {
        /* background-color: #e1017e; */
    }

    .header-nav {
        justify-content: center;
        align-items: center;
        width: 100%;
        height: 50px;
    }

    .header-left {
        flex-direction: row;
        align-items: center;
        position: absolute;
        left: 10px;
        min-width: 200px;
        height: 100%;
    }

    .header-left:active {
        opacity: 0.8;
    }

    .header-left-arrow {
        width: 13px;
        height: 8px;
        transition-property: transform;
        transition-duration: 200ms;
        transform: rotate(0);
    }

    .header-left-arrow-active {
        transform: rotate(180deg);
    }

	.header-left-shop{
        font-family: PingFangSC-Semibold;
        font-size: 17px;
        color: #000000;
		width: 100%;
	}

    .header-left-city {
        font-size: 14px;
        color: black;
		display: none;
    }

    .header-title {
        color: white;
        font-size: 18px;
    }

    .header-right {
        justify-content: center;
        align-items: center;
        position: absolute;
        bottom: 0;
        right: 0;
        width: 50px;
        height: 50px;
    }
    .search{right: 100px;}
    .build{right:50px;}
    .advice{right: 10px;}
    .advice-bags{
        position:absolute; 
        right: 15px; 
        top:13px; 
        width: 15px;
        height: 15px;
        background-color: #D10028; 
        border-radius: 8px;
        font-family: ArialMT;
        font-size: 12px;
        color: #FFFFFF;
        text-align: center;
    }
    .header-right:active {
        opacity: 0.8;
    }

    .header-right-icon {
        /* padding-right: 20px; */
        width: 24px;
        height: 24px;
    }

    .nav {
		width: 100%;
        height: 40px;
        /* background-color: #e1017e;
        background-attachment: fixed;
		white-space: nowrap; */
    }

    .nav-menu {
		display: inline-block;
        margin: 0 20px;
        height: 40px;
        line-height: 40px;
        font-family: PingFangSC-Regular;
        font-size: 14px;
        color: #7B7B7B;
        background-image: none;
    }

    .nav-menu-selected {
        font-family: PingFangSC-Semibold;
        font-size: 14px;
        color: #D2082E;
        font-weight: bolder;
        background-image: url(../../image/line-4px.png);
        background-repeat: no-repeat;
        background-position: bottom;
    }
    .warelist {
        width: 100%;
        flex: 1;
        overflow-y: scroll;
    }

    .header {
        width: 100%;
        padding: 4px 8px;
        box-sizing: border-box;
        background-color: white;
    }
    
    .banner {
        width: 100%;
    }

    .cell {
        height: 230px;
        padding: 0 8px;
    }

    .container {
        flex-direction: column;
        align-items: center;
        width: 100%;
        height: 100%;
        border-bottom: 0.5px solid #d1d1d1;
    }

    .container:active {
        background-color: #f8f8f8;
    }
    
    .container-header{
        flex-direction: row;
        width: 100%;
        height: 63px;
    }
    .no{
        margin: 15px;
        padding-top: 5px;
        width:36px;
        height:43px;
        background: #EDEDED;
        border-radius: 5px;
        font-family: Arial-BoldMT;
        font-size: 20px;
        color: #505050;
        text-align: center;
    }
    .receiver{flex-direction: column;width: 100%;}
    .receiver-user-name{flex-direction: row; width:100%;background-color: green;}
    .receiver-user-call{width:100%;text-align: right;background-color: red;}
    .receiver-user-call-icon{width:24px;height:24px;}
    .list{flex-direction: row; width: 100%;height: 25px;}
    .list-left{width: 50%;}
    .list-right{width: 50%; text-align: right;}


    /* .thumbnail {
        width: 100px;
        height: 100px;
    }
    
    .info {
        flex: 1;
        height: 100px;
        padding-left: 8px;
        justify-content: center;
    }
    
    .info-name {
        font-size: 16px;
        color: #000;
        font-weight: 500;
        width: 100px;
        height: 40px;
    }

    .info-description {
        font-size: 14px;
        color: gray;
    }
    
    .info-price {
        font-size: 14px;
        color: #e3007f;
    }
    
    .info-origin-price {
        font-size: 11px;
        color: #c0c0c0;
        text-decoration: line-through;
    } */

    .control {
        flex-direction: row;
        position: absolute;
        right: 0;
        bottom: 20px;
    }
    
    .minus, .add {
        display: flex;
        width: 25px;
        height: 25px;
    }

    .minus:active {
        opacity: 0.7;
    }

    .add:active {
        opacity: 0.7;
    }

    .none {
        display: none;
    }
    
    .count {
        display: flex;
        width: 40px;
        height: 24px;
        line-height: 24px;
        margin: 0 5px;
        color: #444;
        font-size: 14px;
        text-align: center;
        border-radius: 12px;
        border: 1px solid #ddd;
        background-color: #fff;
    }
    
    .footer {
        height: 44px;
        justify-content: center;
        align-items: center;
    }

    .loadDesc {
        width: 200px;
        text-align: center;
    }

    .minicart {
        position: absolute;
        bottom: 110px;
    }

    .cityselect {
        position: absolute;
        width: 100%;
        height: 100%;
    }
</style>
